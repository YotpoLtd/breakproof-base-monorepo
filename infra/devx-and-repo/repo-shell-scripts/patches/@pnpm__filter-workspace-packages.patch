diff --git a/lib/index.js b/lib/index.js
index 5dbee925d26668ee754c1e482d2e6066c583307f..c126bd74573f27683c7ffb9234b9ebb06bf64606 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -61,9 +61,10 @@ async function filterPackages(pkgs, filter, opts) {
 }
 async function filterPkgsBySelectorObjects(pkgs, packageSelectors, opts) {
     const [prodPackageSelectors, allPackageSelectors] = (0, partition_1.default)(({ followProdDepsOnly }) => !!followProdDepsOnly, packageSelectors);
+    const createPkgGraph = opts.createPkgGraph || (0, workspace_pkgs_graph_1.createPkgGraph);
     if ((allPackageSelectors.length > 0) || (prodPackageSelectors.length > 0)) {
         let filteredGraph;
-        const { graph } = (0, workspace_pkgs_graph_1.createPkgGraph)(pkgs, { linkWorkspacePackages: opts.linkWorkspacePackages });
+        const { graph } = createPkgGraph(pkgs, { linkWorkspacePackages: opts.linkWorkspacePackages });
         if (allPackageSelectors.length > 0) {
             filteredGraph = await filterWorkspacePackages(graph, allPackageSelectors, {
                 workspaceDir: opts.workspaceDir,
@@ -74,7 +75,7 @@ async function filterPkgsBySelectorObjects(pkgs, packageSelectors, opts) {
         }
         let prodFilteredGraph;
         if (prodPackageSelectors.length > 0) {
-            const { graph } = (0, workspace_pkgs_graph_1.createPkgGraph)(pkgs, { ignoreDevDeps: true, linkWorkspacePackages: opts.linkWorkspacePackages });
+            const { graph } = createPkgGraph(pkgs, { ignoreDevDeps: true, linkWorkspacePackages: opts.linkWorkspacePackages });
             prodFilteredGraph = await filterWorkspacePackages(graph, prodPackageSelectors, {
                 workspaceDir: opts.workspaceDir,
                 testPattern: opts.testPattern,
@@ -95,7 +96,7 @@ async function filterPkgsBySelectorObjects(pkgs, packageSelectors, opts) {
         };
     }
     else {
-        const { graph } = (0, workspace_pkgs_graph_1.createPkgGraph)(pkgs, { linkWorkspacePackages: opts.linkWorkspacePackages });
+        const { graph } = createPkgGraph(pkgs, { linkWorkspacePackages: opts.linkWorkspacePackages });
         return { allProjectsGraph: graph, selectedProjectsGraph: graph, unmatchedFilters: [] };
     }
 }
