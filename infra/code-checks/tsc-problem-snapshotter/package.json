{
  "$schema": "https://json.schemastore.org/package.json",
  "name": "@repo/tsc-problem-snapshotter",
  "version": "0.3.1",
  "pnpm": {
    "executionEnv": {
      "nodeVersion": "14.21.3"
    }
  },
  "packageManager": "pnpm@9.15.9",
  "bin": {
    "yotpo-tsc-problem-snapshotter": "./dist/tsc-problem-snapshotter-cli.js"
  },
  "files": [
    "dist",
    "README.md"
  ],
  "scripts": {
    "lint:everything": "pnpm --workspace-root run '/^shared:lint:.*/'",
    "lint:everything:fix-autofixable": "pnpm --workspace-root run --sequential '/^shared:fix:/'",
    "lint:precommit": "pnpm --workspace-root run '/^shared:(staged:lint:.*|lint:dependencies:.*)/'",
    "lint:precommit:fix-autofixable": "pnpm --workspace-root run --sequential '/^shared:staged:fix:/'",
    "lint:github-pr": "pnpm --workspace-root run '/^shared:(github-pr:lint|lint:dependencies:.*)/'",
    "preinstall": "[ -n \"$(pwd | grep '/node_modules/')\" ] || echo $npm_config_user_agent | grep -q 'pnpm/' || (echo 'PLEASE USE PNPM, not NPM' && exit 1)",
    "test": "pnpm run test:units:run",
    "test:units:run": "pnpm --filter=@repo/jest-base-isolated run jest",
    "test:units:watch": "pnpm run test --watch",
    "test:unites:coverage": "pnpm run test --coverage",
    "transpile": "tsc --project ./tsconfig.build.json",
    "dev": "pnpm --filter='{.}^...' build && pnpm run dev:watch",
    "dev:with-deps": "pnpm --filter='{.}^...' build && pnpm --filter='{.}...' run --parallel '/^dev:(watch|serve)$/'",
    "build": "pnpm run transpile",
    "dev:watch": "pnpm run transpile --watch",
    "bin": "SCRIPT_PATH=$PWD/dist/tsc-problem-snapshotter-cli.js && cd $INIT_CWD && node $SCRIPT_PATH",
    "bin:ts": "SCRIPT_PATH=$PWD/src/tsc-problem-snapshotter-cli.ts && cd $INIT_CWD && pnpm --filter='@repo/typescript-base-isolated' run tsx $SCRIPT_PATH",
    "release": "[ -z \"$IS_MAIN_BREAKPROOF_REPO\" ] || pnpm --workspace-root run shared:release --config $PWD/release-it.npm.ts",
    "__SEE_SHARED__": "echo \"You can run any script starting with 'shared:' defined in <repo-root>/package.json by executing `pnpm -w <name of script>` from your package directory\""
  },
  "dependencies": {
    "@aivenio/tsc-output-parser": "^2.1.1",
    "@repo/code-problem-snapshotter": "workspace:^"
  },
  "devDependencies": {
    "@repo/depcheck-base-isolated": "workspace:^",
    "@repo/eslint-base-isolated": "workspace:^",
    "@repo/jest-base-isolated": "workspace:^",
    "@repo/lint-staged-base-isolated": "workspace:^",
    "@repo/release-it-base-isolated": "workspace:^",
    "@repo/typescript-base-isolated": "workspace:^",
    "prettier": "^3.4.2",
    "tsx": "^4.19.1",
    "typescript": "^5.3.3"
  },
  "devtoolsDependencies": [
    "@repo/depcheck-base-isolated",
    "@repo/eslint-base-isolated",
    "@repo/jest-base-isolated",
    "@repo/lint-staged-base-isolated",
    "@repo/release-it-base-isolated",
    "@repo/typescript-base-isolated"
  ],
  "peerDependencies": {
    "prettier": "*"
  }
}
